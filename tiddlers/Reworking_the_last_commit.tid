created: 20150606031342816
modified: 20150606133943863
tags: Answers
title: Reworking the last commit
type: text/vnd.tiddlywiki

''WARNING:'' These techniques should only be used for non-merge commits. If you have a merge commit, you are better off deleting the merge and recreating it.

If you want to perform significant work on the last commit, you can simply `git reset HEAD^`. This will undo the commit (peel it off) and restore the index to the state it was in before that commit, leaving the working directory with the changes uncommitted, and you can fix whatever you need to fix and try again.

You can do this with multiple (non-merge) commits in a row (using `HEAD^^` or similar techniques), but then of course you lose the separation between the commits and are left with an undifferentiated working directory. If you are trying to squash all of the commits together, or rework which bits are in which commits, this may be what you want.

If you want to reorder commits, split them, merge them together, or otherwise perfect the commits, you should explore [[Post Production Editing Using Git|http://sethrobertson.github.com/GitPostProduction]].
